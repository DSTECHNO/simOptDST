/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     simpleFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         3000;

deltaT          1;

writeControl    timeStep;

writeInterval   3000;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression compressed;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

functions
{
    fieldAverage1
    {
        type            fieldAverage;
        functionObjectLibs ( "libfieldFunctionObjects.so" );
        enabled         true;
        outputControl   outputTime;
	cleanRestart    false;
	resetOnOutput   false;
	//timeStart       400.0;

        fields
        (
            U
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }
	    p
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }

         );
    }

    probes1Up
    {
        type            probes;
        functionObjectLibs ("libsampling.so");
        enabled         true;
        outputControl   timeStep;
        outputInterval  1;
	

        fields
        (
         	p U 
        );

        probeLocations
        (

	     (0.011 0.057 0.115)//3

           
        );
    }

    probes2Up
    {
        type            probes;
        functionObjectLibs ("libsampling.so");
        enabled         true;
        outputControl   timeStep;
        outputInterval  1;
	

        fields
        (
         	p U 
        );

        probeLocations
        (

	     (0.037 0.057 0.115)//3

           
        );

    }

    probes3Up
    {
        type            probes;
        functionObjectLibs ("libsampling.so");
        enabled         true;
        outputControl   timeStep;
        outputInterval  1;
	

        fields
        (
         	p U 
        );

        probeLocations
        (

	     (0.102 0.057 0.115)//3

           
        );

    }

    probes4Up
    {
        type            probes;
        functionObjectLibs ("libsampling.so");
        enabled         true;
        outputControl   timeStep;
        outputInterval  1;
	

        fields
        (
         	p U 
        );

        probeLocations
        (

	     (0.251 0.057 0.115)//3

           
        );

    }

    probes5Up
    {
        type            probes;
        functionObjectLibs ("libsampling.so");
        enabled         true;
        outputControl   timeStep;
        outputInterval  1;
	

        fields
        (
         	p U 
        );

        probeLocations
        (

	     (0.277 0.057 0.115)//3

           
        );

    }

    probes6Up
    {
        type            probes;
        functionObjectLibs ("libsampling.so");
        enabled         true;
        outputControl   timeStep;
        outputInterval  1;
	

        fields
        (
         	p U 
        );

        probeLocations
        (

	     (0.342 0.057 0.115)//3

           
        );

    }



    probes1UMean
    {
        type            probes;
        functionObjectLibs ("libsampling.so");
        enabled         true;
        outputControl   timeStep;
        outputInterval  1;
	

        fields
        (
         	UMean pMean
        );

        probeLocations
        (

	     (0.011 0.057 0.115)//3
           
        );

    } 

    probes4UMean
    {
        type            probes;
        functionObjectLibs ("libsampling.so");
        enabled         true;
        outputControl   timeStep;
        outputInterval  1;
	

        fields
        (
         	UMean pMean 
        );

        probeLocations
        (

	     (0.251 0.057 0.115)//3
           
        );

    } 
    

    sampleset
    { 
        type sets; 
	functionObjectLibs
 	("libsampling.so"); 
        enabled         true; 
	outputControl   outputTime;
	setFormat raw; 
	surfaceFormat vtk ; 
	interpolationScheme cellPoint; 
        fields 
        ( UMean pMean); 
        sets 
        ( 
            line1
      	{
          type    uniform;
          axis    x;
          start   ( 0.007 0.0567 0.115 );
          end     ( 0.120 0.0567 0.115 );
          nPoints 100;
      }

      line2
      {
          type    uniform;
          axis    x;
          start   ( 0.127 0.1533 0.115 );
          end     ( 0.240 0.1533 0.115 );
          nPoints 100;
      }

      line3
      {
          type    uniform;
          axis    x;
          start   ( 0.247 0.0567 0.115 );
          end     ( 0.360 0.0567 0.115 );
          nPoints 100;
      }

      line4
      {
          type    uniform;
          axis    x;
          start   ( 0.367 0.1533 0.115 );
          end     ( 0.480 0.1533 0.115 );
          nPoints 100;
      }
            third027 
            { 
               type    uniform;
          	axis    x;
          	start   ( 0.247 0.0567 0.115 );
          	end     ( 0.360 0.0567 0.115 );
          	nPoints 200;
            } 
            third05 
            { 
               type    uniform;
          	axis    x;
          	start   ( 0.247 0.105 0.115 );
          	end     ( 0.360 0.105 0.115 );
          	nPoints 200;
            } 
            third072
            { 
               type    uniform;
          	axis    x;
          	start   ( 0.247 0.1512 0.115 );
          	end     ( 0.360 0.1512 0.115 );
          	nPoints 200;
            } 
        ); 
    } 


    

}

  // **************************************************************** //
 
