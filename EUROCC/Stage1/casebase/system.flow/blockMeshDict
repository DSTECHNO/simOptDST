/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;

vertices
(
	//back
	//bottom vertices
	(0 0 0)	
	(7 0 0)
 	(120 0 0)
	(127 0 0)
	(240 0 0)
	(247 0 0)
	(360 0 0)
	(367 0 0)
	(480 0 0)
	(487 0 0)

	//2nd floor vertices
	(0 30 0)
	(7 30 0)
 	(120 30 0)
	(127 30 0)
	(240 30 0)
	(247 30 0)
	(360 30 0)
	(367 30 0)
	(480 30 0)
	(487 30 0)

	//3rd floor vertices
	(7 180 0)
	(120 180 0)
	(127 180 0)
	(240 180 0)
	(247 180 0)
	(360 180 0)
	(367 180 0)
	(480 180 0)

	//4th floow vertices
	(7 210 0)
 	(120 210 0)
	(127 210 0)
	(240 210 0)
	(247 210 0)
	(360 210 0)
	(367 210 0)
	(480 210 0)

	
	//front
	//bottom vertices
	(0 0 230)	
	(7 0 230)
 	(120 0 230)
	(127 0 230)
	(240 0 230)
	(247 0 230)
	(360 0 230)
	(367 0 230)
	(480 0 230)
	(487 0 230)

	//2nd floor vertices
	(0 30 230)
	(7 30 230)
 	(120 30 230)
	(127 30 230)
	(240 30 230)
	(247 30 230)
	(360 30 230)
	(367 30 230)
	(480 30 230)
	(487 30 230)

	//3rd floor vertices
	(7 180 230)
	(120 180 230)
	(127 180 230)
	(240 180 230)
	(247 180 230)
	(360 180 230)
	(367 180 230)
	(480 180 230)

	//4th floow vertices
	(7 210 230)
 	(120 210 230)
	(127 210 230)
	(240 210 230)
	(247 210 230)
	(360 210 230)
	(367 210 230)
	(480 210 230)
);

blocks
(
	//1st floor blocks
	hex (0 1 11 10 36 37 47 46) (15 10 90) simpleGrading 
	(
	 ((0.3 0.3 5) (0.4 0.4 1) (0.3 0.3 0.2)) 
	 ((0.3 0.4 10) (0.4 0.2 1) (0.3 0.4 0.1))  
	 ((0.06 0.1 4) (0.88 0.8 1) (0.06 0.1 0.2))
	) 								//1

  	hex (1 2 12 11 37 38 48 47) (50 10 90) simpleGrading 
	(((0.03 0.1 8) (0.94 0.8 1) (0.03 0.1 0.125)) 
	 ((0.3 0.4 10) (0.4 0.2 1) (0.3 0.4 0.1)) 
	 ((0.06 0.1 4) (0.88 0.8 1) (0.06 0.1 0.2))
	 ) 	 							//2

    	hex (3 4 14 13 39 40 50 49) (50 10 90) simpleGrading 
	(((0.03 0.1 8) (0.94 0.8 1) (0.03 0.1 0.125)) 
	 ((0.3 0.4 10) (0.4 0.2 1) (0.3 0.4 0.1)) 
	 ((0.06 0.1 4) (0.88 0.8 1) (0.06 0.1 0.2))
	) 								//3
 						
    	hex (4 5 15 14 40 41 51 50) (15 10 90) simpleGrading 
	(((0.3 0.3 5) (0.4 0.4 1) (0.3 0.3 0.2)) 
	 ((0.3 0.4 10) (0.4 0.2 1) (0.3 0.4 0.1))
	 ((0.06 0.1 4) (0.88 0.8 1) (0.06 0.1 0.2))
	) 	 							//4 

	hex (5 6 16 15 41 42 52 51) (50 10 90) simpleGrading 
	(((0.03 0.1 8) (0.94 0.8 1) (0.03 0.1 0.125)) 
	 ((0.3 0.4 10) (0.4 0.2 1) (0.3 0.4 0.1)) 
	 ((0.06 0.1 4) (0.88 0.8 1) (0.06 0.1 0.2))
	) 								//5

	hex (7 8 18 17 43 44 54 53) (50 10 90) simpleGrading 
	(((0.03 0.1 8) (0.94 0.8 1) (0.03 0.1 0.125)) 
	 ((0.3 0.4 10) (0.4 0.2 1) (0.3 0.4 0.1)) 
	 ((0.06 0.1 4) (0.88 0.8 1) (0.06 0.1 0.2))
	) 								//6

	hex (8 9 19 18 44 45 55 54) (15 10 90) simpleGrading 
	(((0.3 0.3 5) (0.4 0.4 1) (0.3 0.3 0.2))
	 ((0.3 0.4 10) (0.4 0.2 1) (0.3 0.4 0.1)) 
	 ((0.06 0.1 4) (0.88 0.8 1) (0.06 0.1 0.2))
	) 								//7
	
	//2nd floor blocks
	hex (11 12 21 20 47 48 57 56) (50 70 90) simpleGrading 
	(((0.03 0.1 8) (0.94 0.8 1) (0.03 0.1 0.125)) 
	 ((0.05 0.1 4) (0.9 0.8 1) (0.05 0.1 0.25)) 
	 ((0.06 0.1 4) (0.88 0.8 1) (0.06 0.1 0.2))
	) 								//8

	hex (13 14 23 22 49 50 59 58) (50 70 90) simpleGrading 
	(((0.03 0.1 8) (0.94 0.8 1) (0.03 0.1 0.125)) 
	 ((0.05 0.1 4) (0.9 0.8 1) (0.05 0.1 0.25))  
	 ((0.06 0.1 4) (0.88 0.8 1) (0.06 0.1 0.2))
	) 								//9

	hex (15 16 25 24 51 52 61 60) (50 70 90) simpleGrading 
	(((0.03 0.1 8) (0.94 0.8 1) (0.03 0.1 0.125)) 
	 ((0.05 0.1 4) (0.9 0.8 1) (0.05 0.1 0.25))  
	 ((0.06 0.1 4) (0.88 0.8 1) (0.06 0.1 0.2))
	) 								//10

	hex (17 18 27 26 53 54 63 62) (50 70 90) simpleGrading 
	(((0.03 0.1 8) (0.94 0.8 1) (0.03 0.1 0.125)) 
	 ((0.05 0.1 4) (0.9 0.8 1) (0.05 0.1 0.25))  
	 ((0.06 0.1 4) (0.88 0.8 1) (0.06 0.1 0.2))
	) 								//11

	//3rd floor blocks
	hex (20 21 29 28 56 57 65 64) (50 10 90) simpleGrading 
	(((0.03 0.1 8) (0.94 0.8 1) (0.03 0.1 0.125)) 
	 ((0.3 0.4 10) (0.4 0.2 1) (0.3 0.4 0.3)) 
	 ((0.06 0.1 4) (0.88 0.8 1) (0.06 0.1 0.2))
	) 								//12

	hex (21 22 30 29 57 58 66 65) (15 10 90) simpleGrading 
	(((0.3 0.3 5) (0.4 0.4 1) (0.3 0.3 0.2)) 
	 ((0.3 0.4 10) (0.4 0.2 1) (0.3 0.4 0.3)) 
	 ((0.06 0.1 4) (0.88 0.8 1) (0.06 0.1 0.2))
	) 								//13

	hex (22 23 31 30 58 59 67 66) (50 10 90) simpleGrading 
	(((0.03 0.1 8) (0.94 0.8 1) (0.03 0.1 0.125)) 
	 ((0.3 0.4 10) (0.4 0.2 1) (0.3 0.4 0.3)) 
	 ((0.06 0.1 4) (0.88 0.8 1) (0.06 0.1 0.2))
	)								//14

	hex (24 25 33 32 60 61 69 68) (50 10 90) simpleGrading 
	(((0.03 0.1 8) (0.94 0.8 1) (0.03 0.1 0.125)) 
	 ((0.3 0.4 10) (0.4 0.2 1) (0.3 0.4 0.3)) 
	 ((0.06 0.1 4) (0.88 0.8 1) (0.06 0.1 0.2))
	) 								//15

	hex (25 26 34 33 61 62 70 69) (15 10 90) simpleGrading 
	(((0.3 0.3 5) (0.4 0.4 1) (0.3 0.3 0.2)) 
	 ((0.3 0.4 10) (0.4 0.2 1) (0.3 0.4 0.3)) 
	 ((0.06 0.1 4) (0.88 0.8 1) (0.06 0.1 0.2))
	) 								//16

	hex (26 27 35 34 62 63 71 70) (50 10 90) simpleGrading 
	(((0.03 0.1 8) (0.94 0.8 1) (0.03 0.1 0.125)) 
	 ((0.3 0.4 10) (0.4 0.2 1) (0.3 0.4 0.3)) 
	 ((0.06 0.1 4) (0.88 0.8 1) (0.06 0.1 0.2))
	) 								//17

        //baffle blocks
	hex (12 13 22 21 48 49 58 57) (15 70 90) simpleGrading 
	(((0.3 0.3 5) (0.4 0.4 1) (0.3 0.3 0.2)) 
	 ((0.05 0.1 4) (0.9 0.8 1) (0.05 0.1 0.25))
	 ((0.06 0.1 4) (0.88 0.8 1) (0.06 0.1 0.2))
	) 	 							//baffle 1 

	hex (14 15 24 23 50 51 60 59) (15 70 90) simpleGrading 
	(((0.3 0.3 5) (0.4 0.4 1) (0.3 0.3 0.2)) 
	 ((0.05 0.1 4) (0.9 0.8 1) (0.05 0.1 0.25))
	 ((0.06 0.1 4) (0.88 0.8 1) (0.06 0.1 0.2))
	) 	 							//baffle 2 

        hex (16 17 26 25 52 53 62 61) (15 70 90) simpleGrading 
	(((0.3 0.3 5) (0.4 0.4 1) (0.3 0.3 0.2)) 
	 ((0.05 0.1 4) (0.9 0.8 1) (0.05 0.1 0.25))
	 ((0.06 0.1 4) (0.88 0.8 1) (0.06 0.1 0.2))
	) 	 							//baffle 3 
    
);

edges
(
);


boundary
(
    
    inlet
    {
        type		mappedPatch;
	faces           ((0 36 46 10));
	sampleMode	nearestPatchFace;
	samplePatch	outlet;
	offsetMode	uniform;
	offset		(0.487 0 0);
    }
    outlet
    {
        type patch;
	faces           ((9 19 55 45));
    }

    top
    {
        type symmetryPlane;
        faces
        (
            (28 64 65 29)
            (29 65 66 30)
	    (30 66 67 31)
	    (32 68 69 33)	
            (33 69 70 34)
            (34 70 71 35)
        );
    }

    bottom
    {
        type wall;
        faces
        (
            (0 1 37 36)
            (1 2 38 37)
	    (3 4 40 39)
            (4 5 41 40)
            (5 6 42 41)
            (7 8 44 43)
            (8 9 45 44)
        );
    }

    bf1_left
    {
        type wall;
        faces
        (
            (2 38 48 12)
        );
    }

    bf1_right
    {
        type wall;
        faces
        (
           (3 39 49 13)
        );
    }

    bf2_left
    {
        type wall;
        faces
        (
	    (23 59 67 31)
        );
    }

    bf2_right
    {
        type wall;
        faces
        (
           (24 60 68 32)
        );
    }


    bf3_left
    {
        type wall;
        faces
        (
           (6 42 52 16)
        );
    }

    bf3_right
    {
        type wall;
        faces
        (
           (7 43 53 17)
        );
    }


    back
    {
        type wall;
        faces
        (
	     (0 10 11 1)
	     (1 11 12 2)
	     (3 13 14 4)
	     (4 14 15 5)
	     (5 15 16 6)
	     (7 17 18 8)
	     (8 18 19 9)

	     (11 20 21 12)
	     (13 22 23 14)
	     (15 24 25 16)
	     (17 26 27 18)

	     (20 28 29 21)
	     (21 29 30 22)
	     (22 30 31 23)
	     (24 32 33 25)
	     (25 33 34 26)
	     (26 34 35 27)
        );
    }

    front
    {
        type wall;
        faces
        (
	     //front
	     (36 37 47 46)
	     (37 38 48 47)
	     (39 40 50 49)
	     (40 41 51 50)
	     (41 42 52 51)
	     (43 44 54 53)
	     (44 45 55 54)

             (47 48 57 56)
	     (49 50 59 58)
	     (51 52 61 60)
	     (53 54 63 62)

	     (56 57 65 64)
	     (57 58 66 65)
	     (58 59 67 66)
	     (60 61 69 68)
	     (61 62 70 69)
	     (62 63 71 70)
        );
    }


    
    walls
    {
        type wall;
        faces
        (
	    //xz plane
            (10 11 47 46)
            (18 19 55 54)
	    //yz planes
            (11 47 56 20)
	    (20 56 64 28)
            (18 54 63 27)
            (27 63 71 35)
        );
    }

    baffles
    {
        type wall;
        faces ();
    }
);

mergePatchPairs
(
);

// ************************************************************************* //

